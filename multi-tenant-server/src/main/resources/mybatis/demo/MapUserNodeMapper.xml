<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.demo.mapper.MapUserNodeMapper">

    <resultMap id="BaseResultMap" type="com.ruoyi.demo.domain.MapUserNode">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="companyId" column="company_id" jdbcType="VARCHAR"/>
        <result property="nodeId" column="node_id" jdbcType="INTEGER"/>
        <result property="path" column="path" jdbcType="VARCHAR"/>
        <result property="isManage" column="is_manage" jdbcType="INTEGER"/>
        <result property="isShow" column="is_show" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,company_id,
        node_id,is_manage,is_show,
        update_time,create_time,deleted
    </sql>


    <insert id="insertBatch">
        INSERT INTO map_user_node (
        id,
        user_id,
        company_id,
        node_id,
        path,
        is_manage,
        is_show
        ) VALUES
        <foreach collection="list" item="node" separator=",">
            (
            #{node.id},
            #{node.userId},
            #{node.companyId},
            #{node.nodeId},
            #{node.path},
            #{node.isManage},
            #{node.isShow}
            )
        </foreach>
    </insert>


    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
            id,
            user_id,
            company_id,
            node_id,
            is_manage,
            is_show,
            update_time,
            create_time,
            deleted
        FROM map_user_node
    </select>


    <select id="deleteByNodeIds" parameterType="Integer">
        delete from map_user_node where node_id in
        <foreach collection="ids" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </select>


    <select id="selectOne" resultMap="BaseResultMap">
          SELECT
            id,
            user_id,
            company_id,
            node_id,
            is_manage,
            is_show,
            update_time,
            create_time,
            deleted
        FROM map_user_node
        WHERE company_id = #{companyId} and user_id = #{userId} and node_id = #{nodeId}
    </select>

    <select id="selectOneById" resultMap="BaseResultMap">
        SELECT
            id,
            user_id,
            company_id,
            node_id,
            is_manage,
            is_show,
            update_time,
            create_time,
            deleted
        FROM map_user_node
        WHERE id = #{id}
    </select>


    <update id="update2Auth">
        UPDATE map_user_node SET is_manage = #{isManage}, is_show = #{isShow} WHERE id = #{id}
    </update>

    <select id="selectListByNodeId" resultMap="BaseResultMap">
        SELECT
            id,
            user_id,
            company_id,
            node_id,
            path,
            is_manage,
            is_show,
            update_time,
            create_time,
            deleted
        FROM map_user_node
        WHERE node_id = #{node_id}
    </select>

    <select id="selectListByShow" resultMap="BaseResultMap">
        SELECT
            id,
            user_id,
            company_id,
            node_id,
            path,
            is_manage,
            is_show,
            update_time,
            create_time,
            deleted
        FROM map_user_node
        WHERE user_id = #{userId} AND company_id = #{companyId} AND is_show = #{isShow}
    </select>


</mapper>
